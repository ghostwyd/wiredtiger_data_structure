digraph Page {
    rankdir=LR;
    subgraph cluster_wt_ref {
        node[shape=record]
        label="wt_ref"
        wt_page[label="WT_PAGE|union\{\n
         struct \{\n
            WT_REF *parent_ref;\n 
            uint64_t split_gen;\n
            struct __wt_page_index \{\n
                uint32_t entries;\n
                uint32_t deleted_entries;\n
                WT_REF **index;\n
            \} * volatile __index;\n 
        \} intl;\n 
         struct \{\n
            WT_COL *col_var\n
            struct __wt_col_var_repeat \{\n
                uint32_t nrepeats;     \n
                WT_COL_RLE repeats[0]; \n 
            \} * repeats\n;
        \} col_var\n
        \}u|
        uint32_t entries|
        uint8_t type|
        uint8_t flags_atomic|
        uint8_t unused[2]|
        uint64_t read_gen|
        size_t memory_footprint|
        <page_header> const WT_PAGE_HEADER *dsk| 
        WT_PAGE_MODIFY *modify|
        uint64_t cache_create_gen|
        uint64_t evict_pass_gen"
        ]
        wt_ref[label="<page> WT_PAGE *page| WT_PAGE *volatile home|volatile uint32_t pindex_hint|volatile uint32_t state|void *addr|union \{uint64_t recno; void *ikey;\}key|<delete> WT_PAGE_DELETED *page_del|<las> WT_PAGE_LOOKASIDE *page_las"];
        wt_update[label="<header> volatile uint64_t txnid|wt_timestamp_t timestamp|<next> WT_UPDATE *next|uint32_t size|uint8_t type|volatile uint8_t prepare_state|uint8_t data[]"];
        wt_update2[label="<header> volatile uint64_t txnid|wt_timestamp_t timestamp|<next> WT_UPDATE *next|uint32_t size|uint8_t type|volatile uint8_t prepare_state|uint8_t data[]"];
        wt_page_deleted[label="<header> volatile uint64_t txnid|wt_timestamp_t timestamp|volatile uint8_t prepare_state|uint32_t previous_state|<update_list> WT_UPDATE **update_list"];
        wt_page_lookaside[label="<header> uint64_t las_pageid|uint64_t max_txn|uint64_t unstable_txn|wt_timestamp_t max_timestamp|wt_timestamp_t unstable_timestamp|bool eviction_to_lookaside|bool has_prepares|bool resolved|bool skew_newest"]
        page_header[label="PageHeader|uint64_t recordno|uint32_t mem_size|uint32_t entries \| uint32_t data_len|uint8_t type|uint8_t unused[2]"];
        block_header[label="
            wt_block_header|uint32_t disk_size|
            uint32_t checksum|
            uint8_t flags|
            uint8_t unused[3]
        "]
        wt_update:next ->wt_update2:header;
        wt_page_deleted:update_list -> wt_update:header;
        wt_ref:delete -> wt_page_deleted:header;
        wt_ref:las -> wt_page_lookaside:header
        wt_ref:page -> wt_page
        wt_page:page_header -> page_header
    }
}
